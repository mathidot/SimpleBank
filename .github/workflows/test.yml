# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: unit-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: simple_bank
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 15s
          --health-timeout 5s
          --health-retries 10

    steps:

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.6'
      id: go

    - name: Check out code into the Go module directory
    - uses: actions/checkout@v4

    - name: Build
      run: go build -v ./...

    - name: Set up Go-migration
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.18.2/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate /usr/local/bin/
        which migrate

    - name: Wait for PostgreSQL to be ready
      run: |
        for i in {1..10}; do
          if pg_isready -h localhost -p 5432 -U root -d simple_bank; then
            echo "PostgreSQL is ready!"
            break
          fi
          echo "Waiting for PostgreSQL to be ready..."
          sleep 2
        done

    - name: Set environment variables
      run: |
        echo "DATABASE_URL=postgresql://root:secret@postgres:5432/simple_bank?sslmode=disable" >> $GITHUB_ENV

    - name: Run migration
      run: make migrateup

    - name: Test
      run: make test
